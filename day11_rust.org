#+title: Adventure of Code, 2024, день 11, =Rust=

* Частина 1

#+begin_src rust :noweb yes :mkdirp yes :tangle src/bin/day11_1.rs
  <<day11:Декларації>>
  <<day11_1:Декларації>>

  <<day11:Визначення>>
  <<day11_1:Визначення>>

  fn main() {
      let mut result: usize = 0;
      <<day11:Прочитати-дані>>
      <<day11_1:Дії>>
      println!("{}", result);
  }
#+end_src

Прочитаємо рядок із файла, при цьому одразу розберемо його і створимо вектор значень.

#+begin_src rust :noweb-ref day11:Декларації
  use std::{fs, env, io::{self, BufRead}};
#+end_src

#+begin_src rust :noweb-ref day11:Прочитати-дані
  let args: Vec<String> = env::args().collect();
  let file = fs::File::open(&args[1]).unwrap();
  let values = io::BufReader::new(file)
      .lines().nth(0).unwrap().unwrap()
      .split(' ')
      .map(|value| value.parse::<usize>().unwrap())
      .collect::<Vec<_>>();
#+end_src

Виконуємо цикли. Для оптимізації заведемо чергу обробки ~queue~. Для кожного значення спочатку обробляємо
це значення, відкладаючи нові згенеровані значення в чергу.

Для оптимізації заведемо кеш (~cache~), в якому будемо зберігати кількість значень (~delta~), яку
породжує поточне значення з черги.

#+begin_src rust :noweb-ref day11_1:Дії
  let mut queue = [(0, 0); 1000];
  let mut qi = 0;
  for &value in &values {
      println!("Value {}", value);
      queue[qi] = (value, 25);
      qi += 1;
      while qi > 0 {
          //if result % 100_000_000 == 0 { println!("{} {}", result, qi); }
          qi -= 1;
          let (mut value, count) = queue[qi];
          for j in (0..count).rev() {
              if value == 0 { value = 1; continue; }
              let len = (value as f32).log10().floor() as u32 + 1;
              if len % 2 == 0 {
                  let p = 10_usize.pow(len / 2);
                  queue[qi] = (value % p, j);
                  qi += 1;
                  value /= p;
              } else {
                  value = value.checked_mul(2024).unwrap();
              }
          }
          result += 1;
      }
  }
#+end_src

